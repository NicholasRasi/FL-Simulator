#   Human activity recognition for healthcare
#
#   Certain activities in daily life reﬂect early signals of some cognitive diseases.
#   By monitoring users’ activities using body-worn sensors, daily activities and sports activities can be recognized.
#   Wearable technology, smartphone, wristbands, and smart glasses provide easy access to this information.
#   Other than activities, physiological signals can also help to detect certain diseases.
#
#   Given data collected by sensors embedded in wearable devices, we need to recognize the type of activity performed.
#
#   - The selected dataset is the publicly available dataset "WISDM" which contains data collected during WALKING,
#   WALKING-UPSTAIRS, WALKING-DOWNSTAIRS, SITTING, STANDING and JOGGING from 51 subjects.
#   - Each subject has an heterogeneous dataset, since it depends on the habits and activities of each individual.
#   - Devices which collected data are smartphones and smartwatches with limited resources.
#

simulation:
  # number or repetitions
  repetitions: 3
  # simulation output folder
  output_folder: "output"
  # simulation output file
  output_file: "feddyn_usecase1.2.json"
  # model
  model_name: "wisdm"
  # metric
  metric: "accuracy"
  # maximum number of rounds
  num_rounds: 30
  # list of stopping conditions (OR) for ending the simulation
  stop_conds:
    # global model accuracy (during evaluation)
    metric: 1
    # global model loss (during evaluation)
    loss: 0
  # initialization policy
  initializer: "default"
  # fixing random state for reproducibility
  seed: 1
  # set the TensorFlow verbosity, 0 = silent, 1 = progress bar, 2 = one line per epoch
  tf_verbosity: 1
  # number of concurrent processes
  num_processes: 1

algorithms:
  federated_algorithm: "feddyn"
  fit:
    # algorithm used for the FL aggregation
    aggregation: "fedavg"
    # algorithm used for the clients selection
    selection: "random"
    # algorithm used for the update optimizer
    update: "static"
    # algorithm used for the local data optimizer
    data: "random"
    # parameters used by the algorithm
    params:
      # fraction of devices used for the computation
      k: 0.7
      # number of epochs executed for fit for each round
      epochs: 1
      # batch size used for fit for each round
      batch_size: 4
      # number of examples used for fit for each round
      num_examples: 20
  eval:
    selection: "random"
    update: "static"
    data: "random"
    params:
      k: 0.1
      epochs: 1
      batch_size: 4
      num_examples: 20
  # optimizer used (local iteration) string or optimizer instance
  optimizer: "sgd"

devices:
  # total number of devices (D)
  num: 30
  # probability a device is available for a round
  p_available: 0.65
  # probability a device fails during a round
  p_fail: 0.1

computation:
  # mean and variance of number of computed iterations/second per device (among devices) [iter/s]
  ips_mean: 100
  ips_var: 50

energy:
  # mean and variance of energy available at each device [mWh]
  avail_mean: 7000
  avail_var: 2000
  # power consumption for 1 second of computation [mW/s]
  pow_comp_s: 100
  # power consumption for 1 second of network used [mW/s]
  pow_net_s: 200

network:
  # mean and variance of network speed available at each device [params/s]
  speed_mean: 100000
  speed_var: 70000

data:
  # mean and variance of number of examples available at each device
  num_examples_mean: 300
  num_examples_var: 0
  # use non-i.d.d data
  non_iid_partitions: 0.5
  # percentage of mislabelled data
  mislabelling_percentage: 0
